> Problem: [1671. 得到山形数组的最少删除次数](https://leetcode.cn/problems/minimum-number-of-removals-to-make-mountain-array/description/)

[TOC]

# 复杂度

时间复杂度:
$O(n^2)$

空间复杂度:
$O(n)$

# Code

* []

```C++
class Solution {
public:
    int minimumMountainRemovals(vector<int>& nums) {
        int n=nums.size();
        vector<int>v1(n,1),v2(n,1);
        for(int i=1;i<n;i++){
            for(int j=i-1;j>=0;j--){
                if(nums[j]<nums[i]){
                    v1[i]=max(v1[i],v1[j]+1);
                }
            }
        }
        for(int i=n-2;i>=0;i--){
            for(int j=i+1;j<n;j++){
                if(nums[j]<nums[i]){
                    v2[i]=max(v2[i],v2[j]+1);
                }
            }
        }
        int ret=INT_MAX;
        for(int i=1;i<n-1;i++){
            v1[i]=i+1-v1[i];
            v2[i]=n-i-v2[i];
            if(v1[i]>=i||v2[i]>=n-1-i)
                continue;
            ret=min(ret,v1[i]+v2[i]);
        }
        return ret;
    }
};
```

