* 

```
class Solution{
    public List<List<Integer>> allPathsSourceTarget(int[][] graph){

        List<List<Integer>> res = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        path.add(0);
        Queue<List<Integer>> queue = new LinkedList<>();
        queue.offer(path);

        while(!queue.isEmpty()){
            List<Integer> currentList =  queue.poll();
            int currentNode = currentList.get(currentList.size()-1);     
            for(int i : graph[currentNode]){
                currentList.add(i);
                if(i == graph.length-1){
                    res.add(new ArrayList<>(currentList));
                }else{
                    queue.offer(new ArrayList<>(currentList));     
                }
                currentList.remove(currentList.size()-1);    //回溯--思路与DFS回溯一致
            }
        }
        return res;
    }
}
```

