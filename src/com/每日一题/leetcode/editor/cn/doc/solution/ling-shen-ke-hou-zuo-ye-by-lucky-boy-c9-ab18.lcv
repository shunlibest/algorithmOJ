[https://www.bilibili.com/video/BV1ub411Q7sB/?spm_id_from=333.788&vd_source=217bacbee37820b5bf3ed2f4fb8f6c94]()

* 

```
class Solution:
    def minimumMountainRemovals(self, nums: List[int]) -> int:
        # 求两个单调子序列的最大和
        n = len(nums)

        @cache
        def dfs_up(i):
            res = 0
            for j in range(i):
                if nums[j] < nums[i]:
                    res = max(dfs_up(j), res)
            return res + 1
        @cache
        def dfs_down(i):
            res = 0
            for j in range(n - 1, i, -1):
                if nums[j] < nums[i]:
                    res = max(dfs_down(j), res)
            return res + 1
        ans = 0
        for i in range(1, n - 1):
            if dfs_up(i) > 1 and dfs_down(i) > 1:  # 保证是山顶
                ans = max(dfs_up(i) + dfs_down(i) - 1, ans)
        return n - ans


```

