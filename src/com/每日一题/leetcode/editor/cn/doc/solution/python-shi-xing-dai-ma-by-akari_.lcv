### 解题思路

其实就是搞一个字典，这里我输入的顺序反了，人又懒所以就`[::-1]`了，其实写的时候可以把d里的数字从大到小排列。然后开个while循环 找到最大匹配的，匹配上，然后从`num`里减去这个数字，直到`num == 0`就好了。由于字典的查找是$O(1)$的，字典大小也是固定的，所以内层循环是个常数复杂度。外层循环的次数应该介于$n/1000$到$n$之间，整个算法复杂度$O(n)$，n是数字大小

### 代码

* python3

```python
class Solution:
    def intToRoman(self, num: int) -> str:
        d = {1:'I', 4:'IV', 5:'V', 9:'IX', 10:'X', 40:'XL', 50:'L', 90: 'XC', 100: 'C', 400:'CD', 500:'D', 900:'CM', 1000:'M'}
        res = ''
        ks = list(d.keys())[::-1]
        while num != 0:
            for k in ks:
                if num >= k:
                    num -= k
                    res += d[k]
                    break
        return res

            
```

